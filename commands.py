# commands.py

import asyncio
import logging
import datetime

from bot_config import TARGET_CHAT
from alerts import send_alert, get_message_link
from ignore_manager import add_ignored_user, load_ignored_users
from keyword_manager import add_extra_keyword

logger = logging.getLogger(__name__)




class CommandHandler:
    def __init__(self, app, all_keywords, ignored_users=None):
        self.app = app
        self.ALL_KEYWORDS = all_keywords
        self.ignored_users = ignored_users if ignored_users is not None else set()

    def refresh_ignored_users(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —Ñ–∞–π–ª–∞."""
        self.ignored_users = load_ignored_users()

    async def send_help(self, message):
        help_text = (
            "üõ†Ô∏è **–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**\n\n"
            "/addword \"—Å–ª–æ–≤–æ\" - –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ\n"
            "/ignore \"@username\" - –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏–≥–Ω–æ—Ä-–ª–∏—Å—Ç\n"
            "/lasttime <—á–∞—Å—ã> - –≤—Ä—É—á–Ω—É—é –ø—Ä–æ—Å–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —á–∞—Ç—ã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ —á–∞—Å—ã\n"
            "/help - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n\n"
            "‚ÄºÔ∏è –ü–∏—à–∏ –∫–æ–º–∞–Ω–¥—ã –≤ –ª—é–±–æ–º –º–µ—Å—Ç–µ (–ò–∑–±—Ä–∞–Ω–Ω–æ–µ, –≥—Ä—É–ø–ø—ã, –õ–°)."
        )
        await message.reply(help_text, quote=True)

    async def add_word(self, message):
        try:
            parts = message.text.split(' ', 1)
            if len(parts) < 2 or not parts[1].strip():
                await message.reply("‚ùó –£–∫–∞–∂–∏ —Å–ª–æ–≤–æ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã.\n–ü—Ä–∏–º–µ—Ä: `/addword —à—Ç–∞–Ω–≥–∞`", quote=True)
                return

            new_word = parts[1].strip().strip('"').strip("'").lower()
            add_extra_keyword(new_word)  # –¥–æ–±–∞–≤–ª—è–µ–º –≤ —Ñ–∞–π–ª
            self.ALL_KEYWORDS.append(new_word)  # –æ–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫

            await message.reply(f"‚úÖ –ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ **{new_word}** –¥–æ–±–∞–≤–ª–µ–Ω–æ!", quote=True)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å–ª–æ–≤–∞: {e}", exc_info=True)
            await message.reply(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å–ª–æ–≤–∞:\n`{str(e)}`", quote=True)

    async def ignore_user(self, message):
        try:
            parts = message.text.split(' ', 1)
            if len(parts) < 2 or not parts[1].strip():
                await message.reply("‚ùó –£–∫–∞–∂–∏—Ç–µ —é–∑–µ—Ä–Ω–µ–π–º –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã.\n–ü—Ä–∏–º–µ—Ä: `/ignore @username`", quote=True)
                return

            username = parts[1].strip().lstrip("@").lower()
            add_ignored_user(username)  # –¥–æ–±–∞–≤–ª—è–µ–º –≤ —Ñ–∞–π–ª
            self.ignored_users.add(username)  # –æ–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫

            await message.reply(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–≥–Ω–æ—Ä-–ª–∏—Å—Ç.", quote=True)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –∏–≥–Ω–æ—Ä: {e}", exc_info=True)
            await message.reply(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –∏–≥–Ω–æ—Ä:\n`{str(e)}`", quote=True)

    async def last_time(self, message):
        """
        –ö–æ–º–∞–Ω–¥–∞: /lasttime <—á–∏—Å–ª–æ_—á–∞—Å–æ–≤>
        –°–∫–∞–Ω–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ <—á–∏—Å–ª–æ_—á–∞—Å–æ–≤> —á–∞—Å–æ–≤.
        """
        try:
            self.refresh_ignored_users()

            parts = message.text.split(' ', 1)
            if len(parts) < 2 or not parts[1].strip():
                await message.reply("‚ùó –£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã.\n–ü—Ä–∏–º–µ—Ä: `/lasttime 24`", quote=True)
                return

            try:
                hours = int(parts[1].strip())
                if hours <= 0:
                    raise ValueError()
            except ValueError:
                await message.reply(
                    "‚ùó –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ —á–∞—Å–æ–≤. –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ.\n–ü—Ä–∏–º–µ—Ä: `/lasttime 24`",
                    quote=True)
                return

            await message.reply(f"üîé –ù–∞—á–∏–Ω–∞—é —Å–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ {hours} —á–∞—Å–æ–≤...")

            time_limit = datetime.datetime.utcnow() - datetime.timedelta(hours=hours)

            async for dialog in self.app.get_dialogs():
                chat = dialog.chat

                if (chat.username and ("@" + chat.username.lower() == TARGET_CHAT.lower())) or (
                        str(chat.id) == TARGET_CHAT):
                    continue

                async for msg in self.app.get_chat_history(chat.id, limit=100):
                    if not msg.text:
                        continue
                    if msg.date < time_limit:
                        break

                    sender = msg.from_user.username if msg.from_user else None
                    if sender and sender.lower() in self.ignored_users:
                        continue

                    text = msg.text.lower()
                    matched_keyword = next((k for k in self.ALL_KEYWORDS if k in text), None)

                    if not matched_keyword:
                        continue

                    chat_title = chat.title if chat.title else f"–õ–∏—á–∫–∞ @{sender}" if sender else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —á–∞—Ç"
                    chat_link = f"https://t.me/{chat.username}" if chat.username else f"ChatID: {chat.id}"  # —Å—Å—ã–ª–∫–∞ –∏–ª–∏ id

                    link = get_message_link(msg)

                    logger.info(
                        f"(–°—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ) –ù–∞–π–¥–µ–Ω–æ —Å–ª–æ–≤–æ: \"{matched_keyword}\" | –ê–≤—Ç–æ—Ä: @{sender} | –ß–∞—Ç: \"{chat_title}\" "
                        f"| –°—Å—ã–ª–∫–∞ –Ω–∞ —á–∞—Ç: {chat_link} –°—Å—ã–ª–∫–∞ –Ω–∞ sms: {link} ")


                    await send_alert(self.app, msg, matched_keyword,
                                     old_message_note="üï∞Ô∏è *–°–æ–æ–±—â–µ–Ω–∏–µ –∑–∞ –ø—Ä–æ—à–µ–¥—à–µ–µ –≤—Ä–µ–º—è!*\n\n", link=link)

                    await asyncio.sleep(5)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –æ—Ç–ø—Ä–∞–≤–∫–∞–º–∏

            await message.reply(f"‚úÖ –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ {hours} —á–∞—Å–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}", exc_info=True)
            await self.app.send_message(message.chat.id, f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏:\n`{str(e)}`")
